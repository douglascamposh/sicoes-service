# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main", "develop" ]
  
  workflow_dispatch:
    inputs:
      targetEnv:
        description: 'Target ENV i.e: develop, main'
        required: true
        default: 'develop'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    name: Docker Build Image
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}
    # ------------------ START APP ENVIRONMENT SELECTOR FROM PARAM SECTION ----------
    #Check selected ENV
    - name: Check ENV params
      run: echo targetEnv param is ${{ github.event.inputs.targetEnv }}

    #Check if ENV param is empty due to PR trigger then use QA as default
    - name: Check if Param ENV is incorrect . If so then select QA as default
      if: ${{ github.event.inputs.targetEnv == '' }}
      run: echo "TARGET_ENV=develop" >> "$GITHUB_ENV"
    #-------------------------- Build -------------------
    - name: Check TARGET ENV  param
      run: echo "${{ env.TARGET_ENV }}"
    - name: Modify env variable AWS
      run: |
        sed -i 's/aws.access_key_id=${AWS_ACCESS_KEY_ID}/aws.access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}/' scrapsicoes/src/main/resources/application-docker.properties &&
        sed -i 's/aws.secret_access_key=${AWS_SECRET_ACCESS_KEY}/aws.secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}/' scrapsicoes/src/main/resources/application-docker.properties &&
        cat scrapsicoes/src/main/resources/application-docker.properties
    - name: Build with Maven
      run: mvn -B --file scrapsicoes/pom.xml clean package -Dspring.profiles.active=docker
    #-------------------------- Build Docker images and push -------------------
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Build and push docker image
      uses: docker/build-push-action@v5
      with:
        context: ./scrapsicoes/
        platforms: linux/amd64,linux/arm64
        tags: douglascamposh/scrapsicoes
        push: true

